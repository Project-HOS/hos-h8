; --------------------------------------------------------------------------- 
;  HOS タスクディスパッチ処理                                                 
;                                            Copyright (C) 1998-2000 by Ryuz  
; --------------------------------------------------------------------------- 

	;	.CPU     300HA

	;	.INCLUDE "extern.inc"


		.SECTION  P,CODE,ALIGN=2

; -----------------------------------------------
;  割込みマスク (汎用)
; -----------------------------------------------
___di:		
		ORC	#H'80, CCR
		RTS

; -----------------------------------------------
;  割込みマスク解除 (汎用)
; -----------------------------------------------
___ei:		
		ANDC	#H'7F,CCR
		RTS


; -----------------------------------------------
;  割込みマスク (システムコール用)
; -----------------------------------------------
___set_imsk:	
		ORC	#H'80, CCR
		RTS


; -----------------------------------------------
;  割込みマスクからの復帰 (システムコール用)
; -----------------------------------------------
___res_imsk:	
		MOV.W	@_sysstat,R0
		AND.W	#H'02,R0
		BNE	NO_SET
		ANDC	#H'7F,CCR
NO_SET:		
		RTS


; -----------------------------------------------
;           タスクスタート部分
;     最初のディスパッチ後ここに来る
; -----------------------------------------------
___tskst_entry:
		LDC	#H'00,CCR	; 割り込み許可
		PUSH.W	R0		; スタートパラメーター
		JSR	@ER6
		ADDS	#2,ER7
		JMP	@_ext_tsk	; タスク終了


; -----------------------------------------------
;  タスク切り替え
;  H   __swc_dsp(T_TCB *tcb);
; -----------------------------------------------
___swc_dsp:	
		PUSH.L	ER2
		PUSH.L	ER3
		PUSH.L	ER4
		PUSH.L	ER5
		PUSH.L	ER6
		SUBS	#2, ER7		; リターンパラメータ用領域作成
		MOV.L	@_curtcb,ER1
		MOV.L	ER7,@(0, ER1)	; スタックポインタ保存
		MOV.L	@(0, ER0), ER7	; スタックポインタ復帰
		MOV.L	ER0,@_curtcb	; 新TCB登録
		POP.W	R0		; リターンパラメーター取得
		POP.L	ER6
		POP.L	ER5
		POP.L	ER4
		POP.L	ER3
		POP.L	ER2
		RTS


; -----------------------------------------------
; タスクの復帰
; void __sta_dsp(T_TCB *tcb);
; -----------------------------------------------
___sta_dsp:	
		MOV.L	@(0, ER0),ER7	; スタックポインタ復帰
		POP.W	R0
		POP.L	ER6
		POP.L	ER5
		POP.L	ER4
		POP.L	ER3
		POP.L	ER2
		RTS


; -----------------------------------------------
; タスクの停止
; H    __end_dsp(void);
; -----------------------------------------------
___end_dsp:	
		PUSH.L	ER2
		PUSH.L	ER3
		PUSH.L	ER4
		PUSH.L	ER5
		PUSH.L	ER6
		SUBS	#2, ER7		; リターンパラメータ用領域作成
		MOV.L	@_curtcb,ER1
		MOV.L	ER7,@(0, ER1)	; スタックポインタ保存
		JMP	@___tsk_hlt	; タスク停止


; -----------------------------------------------
;        HALT (レディーキューにタスクが無い)
; -----------------------------------------------
___tsk_hlt:	
		MOV.L	#H'FFFFFFFF,ER0		; NADR
		MOV.L	ER0,@_curtcb
		MOV.L	#_halt_sp,ER7
		LDC	#H'00,CCR		; 割り込み許可
HLT_LOOP:	BRA	HLT_LOOP		; 無限ループ

		.SECTION  B,DATA,ALIGN=2
_halt_stack:	.RES.W	64			; HALT時のスタック
_halt_sp:	


;		.END
